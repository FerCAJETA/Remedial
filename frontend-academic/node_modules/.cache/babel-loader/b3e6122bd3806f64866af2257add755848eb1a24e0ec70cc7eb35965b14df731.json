{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\XFerT\\\\Downloads\\\\academic_system\\\\frontend-academic\\\\src\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login({\n  setIsAuth\n}) {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [loggedIn, setLoggedIn] = useState(false);\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setMessage(\"\");\n    try {\n      const res = await fetch(\"http://localhost:3001/api/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: \"include\",\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await res.json();\n      if (res.ok) {\n        setLoggedIn(true);\n        setMessage(\"¡Login exitoso!\");\n        if (setIsAuth) setIsAuth(true);\n        setTimeout(() => navigate(\"/careers\"), 1000); // Redirige tras 1 segundo\n      } else {\n        setMessage(data.message || \"Error al iniciar sesión\");\n      }\n    } catch (err) {\n      setMessage(\"Error de conexión con el servidor\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Iniciar sesi\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Correo\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Contrase\\xF1a\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Entrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), loggedIn && /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"RMtI0BmeBJoxX0uP6TjrhF0KrXk=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Login","setIsAuth","_s","email","setEmail","password","setPassword","message","setMessage","loggedIn","setLoggedIn","navigate","handleSubmit","e","preventDefault","res","fetch","method","headers","credentials","body","JSON","stringify","data","json","ok","setTimeout","err","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/XFerT/Downloads/academic_system/frontend-academic/src/Login.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function Login({ setIsAuth }) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [loggedIn, setLoggedIn] = useState(false);\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setMessage(\"\");\n    try {\n      const res = await fetch(\"http://localhost:3001/api/login\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        credentials: \"include\",\n        body: JSON.stringify({ email, password })\n      });\n      const data = await res.json();\n      if (res.ok) {\n        setLoggedIn(true);\n        setMessage(\"¡Login exitoso!\");\n        if (setIsAuth) setIsAuth(true);\n        setTimeout(() => navigate(\"/careers\"), 1000); // Redirige tras 1 segundo\n      } else {\n        setMessage(data.message || \"Error al iniciar sesión\");\n      }\n    } catch (err) {\n      setMessage(\"Error de conexión con el servidor\");\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={handleSubmit}>\n        <h2>Iniciar sesión</h2>\n        <input\n          type=\"email\"\n          placeholder=\"Correo\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          required\n        /><br />\n        <input\n          type=\"password\"\n          placeholder=\"Contraseña\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          required\n        /><br />\n        <button type=\"submit\">Entrar</button>\n        {message && <p>{message}</p>}\n        {loggedIn && <p></p>}\n      </form>\n    </div>\n  );\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}